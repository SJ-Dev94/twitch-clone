{"ast":null,"code":"import _classCallCheck from \"/Users/seth/projects/twitchclone/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/seth/projects/twitchclone/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/seth/projects/twitchclone/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/seth/projects/twitchclone/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/seth/projects/twitchclone/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nexport default connect(null, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/seth/projects/twitchclone/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","props","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,YAAR,QAA2B,eAA3B;;IAEMC,U;;;;;;;;;;;;;wCACe;AACjB,WAAKC,KAAL,CAAWF,YAAX;AACD;;;;EAHsBF,KAAK,CAACK,S;;AAK/B,eAAeJ,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA,YAAY,EAAZA;AAAD,CAAP,CAAP,CAA8BC,UAA9B,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport {fetchStreams} from '../../actions'\n\nclass StreamList extends React.Component {\n  componentDidMount(){\n    this.props.fetchStreams();\n  }\n}\nexport default connect(null, {fetchStreams})(StreamList);"]},"metadata":{},"sourceType":"module"}