{"ast":null,"code":"import _classCallCheck from \"/Users/seth/projects/twitchclone/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/seth/projects/twitchclone/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/seth/projects/twitchclone/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/seth/projects/twitchclone/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/seth/projects/twitchclone/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/seth/projects/twitchclone/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from './actions';\n\nvar GoogleAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleAuth, _React$Component);\n\n  function GoogleAuth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleAuth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleAuth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onAuthChange = function (isSignedIn) {\n      if (isSignedIn) {\n        _this.props.signIn();\n      } else {\n        _this.props.signOut();\n      }\n    };\n\n    _this.onSignInClick = function () {\n      _this.auth.signIn();\n    };\n\n    _this.onSignOutClick = function () {\n      _this.auth.signOut();\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleAuth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.gapi.load('client:auth2', function () {\n        window.gapi.client.init({\n          clientId: \"732169580730-274cra0bjoll5abgotonl7rg9i0fd680.apps.googleusercontent.com\",\n          scope: 'email'\n        }).then(function () {\n          _this2.auth = window.gapi.auth2.getAuthInstance();\n\n          _this2.onAuthChange(_this2.auth.isSignedIn.get());\n\n          _this2.auth.isSignedIn.listen(_this2.onAuthChange);\n        });\n      });\n    }\n  }, {\n    key: \"renderAuthButton\",\n    value: function renderAuthButton() {\n      if (this.props.isSignedIn === null) {\n        return null;\n      } else if (this.state.isSignedIn) {\n        return React.createElement(\"button\", {\n          onClick: this.onSignOutClick,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), \"Sign Out\");\n      } else {\n        return React.createElement(\"button\", {\n          onClick: this.onSignInClick,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), \"Sign In with Google\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.renderAuthButton());\n    }\n  }]);\n\n  return GoogleAuth;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(null, {\n  signIn: signIn,\n  signOut: signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/seth/projects/twitchclone/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","props","onSignInClick","auth","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","get","listen","state","renderAuthButton","Component","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,MAAR,EAAgBC,OAAhB,QAA8B,WAA9B;;IAEMC,U;;;;;;;;;;;;;;;;;;UAeJC,Y,GAAe,UAACC,UAAD,EAAgB;AAC7B,UAAIA,UAAJ,EAAgB;AACd,cAAKC,KAAL,CAAWL,MAAX;AACD,OAFD,MAEO;AACL,cAAKK,KAAL,CAAWJ,OAAX;AACD;AACF,K;;UAEDK,a,GAAgB,YAAM;AACpB,YAAKC,IAAL,CAAUP,MAAV;AACD,K;;UAEDQ,c,GAAiB,YAAM;AACrB,YAAKD,IAAL,CAAUN,OAAV;AACD,K;;;;;;;wCA5BkB;AAAA;;AACjBQ,MAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,YAAM;AACrCF,QAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACtBC,UAAAA,QAAQ,EACN,0EAFoB;AAGpBC,UAAAA,KAAK,EAAE;AAHa,SAAxB,EAIGC,IAJH,CAIQ,YAAM;AACZ,UAAA,MAAI,CAACT,IAAL,GAAYE,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;;AACA,UAAA,MAAI,CAACf,YAAL,CAAkB,MAAI,CAACI,IAAL,CAAUH,UAAV,CAAqBe,GAArB,EAAlB;;AACA,UAAA,MAAI,CAACZ,IAAL,CAAUH,UAAV,CAAqBgB,MAArB,CAA4B,MAAI,CAACjB,YAAjC;AACD,SARD;AASD,OAVD;AAWD;;;uCAkBkB;AACjB,UAAI,KAAKE,KAAL,CAAWD,UAAX,KAA0B,IAA9B,EAAoC;AAClC,eAAO,IAAP;AACD,OAFD,MAEO,IAAI,KAAKiB,KAAL,CAAWjB,UAAf,EAA0B;AAC/B,eACE;AAAQ,UAAA,OAAO,EAAE,KAAKI,cAAtB;AAAsC,UAAA,SAAS,EAAC,sBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,aADF;AAMD,OAPM,MAOA;AACL,eACE;AAAQ,UAAA,OAAO,EAAE,KAAKF,aAAtB;AAAqC,UAAA,SAAS,EAAC,sBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtE,wBADF;AAGD;AACF;;;6BAEO;AACN,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKgB,gBAAL,EAAN,CAAP;AACD;;;;EAlDsBxB,KAAK,CAACyB,S;;AAqD/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAW;AACjC,SAAO;AAACjB,IAAAA,UAAU,EAAEiB,KAAK,CAACd,IAAN,CAAWH;AAAxB,GAAP;AACD,CAFD;;AAIA,eAAeL,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA,MAAM,EAANA,MAAD;AAASC,EAAAA,OAAO,EAAPA;AAAT,CAAP,CAAP,CAAiCC,UAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {signIn, signOut} from './actions'\n\nclass GoogleAuth extends React.Component{\n  componentDidMount(){\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId:\n          \"732169580730-274cra0bjoll5abgotonl7rg9i0fd680.apps.googleusercontent.com\",\n          scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      })\n    });\n  }\n  \n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      this.props.signIn();\n    } else {\n      this.props.signOut();\n    }\n  }\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  }\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  }\n  \n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn){\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\"/>\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\"><i className=\"google icon\"/>Sign In with Google</button>\n      )\n    }\n  }\n\n  render(){\n    return <div>{this.renderAuthButton()}</div>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {isSignedIn: state.auth.isSignedIn};\n}\n\nexport default connect(null, {signIn, signOut})(GoogleAuth);"]},"metadata":{},"sourceType":"module"}